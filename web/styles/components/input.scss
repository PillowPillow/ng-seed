.c-input {

	vertical-align: top;
	display: inline-block;
	position: relative;

	input {
		@extend %form-reset-input;
		outline: none;
		position: relative;
		display: block;
		float: right;
		border: none;
		@include appearance(none);
		padding: 0.75em 0.1em 0.25em;
		width: 100%;
		background: transparent;

		&:focus + label {
			&::before {
				@include transform(scale3d(1, 1, 1));
			}

			&::after {
				opacity: 1;
				@include transform(translate3d(0, 0, 0));
			}

			.e-label-content {
				opacity: 0;
				@include transform(translate3d(0, -50%, 0));
			}

			pointer-events: none;
		}

		+ label {
			display: inline-block;
			float: right;
			font-size: .8em;
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;
			-webkit-touch-callout: none;
			@include user-select(none);

			position: relative;
			overflow: hidden;
			padding: 0;
			width: 100%;
			text-align: left;

			.e-label-content {
				position: relative;
				display: block;
				width: 100%;
				padding: 0.75em 0.15em;
				@include transition(opacity, transform);
				@include transition-duration(0.3s);
				@include transition-timing-function(cubic-bezier(0.2, 1, 0.3, 1));
			}

			&::before {
				content: '';
				position: absolute;
				background-color: $primary-d;
				top: 0;
				width: 100%;
				height: 7px;
				@include transform(scale3d(1, 0.4, 1));
				@include transform-origin(50% 100%);
				@include transition(transform, background-color);
				@include transition-duration(0.3s);
				@include transition-timing-function(cubic-bezier(0.2, 1, 0.3, 1));
			}

			&::after {
				content: attr(data-content);
				position: absolute;
				top: 0;
				left: 0;
				padding: 0.75em 0.15em;

				opacity: 0;
				@include transform(translate3d(0, 50%, 0));
				@include transition(opacity, transform);
				@include transition-duration(0.3s);
				@include transition-timing-function(cubic-bezier(0.2, 1, 0.3, 1));
				pointer-events: none;
			}
		}
	}

	@for $i from 0 to $color-length {
		$color: nth($colors, $i+1);
		$color-name: nth($color-names, $i+1);

		&.m-#{$color-name} {
			input {
				&:focus + label {
					&::before {
						background-color: $color;
					}
				}
				+ label {
					&::after {
						color: $color;
					}
				}
			}
		}
	}

	$default-color: nth($btn-color-names, 1);

	@extend .m-#{$default-color};
}
